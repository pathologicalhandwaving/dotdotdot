;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(table-cell-height-history table-cell-width-history table-rows-history table-columns-history imenu--history-list org-read-date-history input-method-history eww-prompt-history command-history org--links-history compile-history grep-history org-refile-history org-tags-history ido-file-history face-name-history minibuffer-history swiper-history file-name-history ivy-history counsel-M-x-history))
(setq table-cell-height-history '("1"))
(setq table-cell-width-history '("5"))
(setq table-rows-history '("3"))
(setq table-columns-history '("2x2" "3"))
(setq imenu--history-list '("*Rescan*"))
(setq eww-prompt-history '("onity edht221 hacking" "onity edht221" "melpa pdf-tools" "melpa.org paperless" "nov.el github" "FAS history of WMDs"))
(setq command-history '((package-install 'projectile-variable nil) (package-install 'org-projectile-helm nil) (package-install 'org-projectile nil) (package-install 'org-capture-pop-frame nil) (load-theme 'nordless nil nil) (load-theme 'nord nil nil) (package-install 'nordless-theme nil) (package-install 'nord-theme nil) (package-install 'sound-wav nil) (package-delete #s(package-desc sound-wav (20160725 724) "Play wav file" ((deferred (0 3 1)) (cl-lib (0 5))) nil nil "/Users/Em/.emacs.d/elpa/sound-wav-20160725.724" ((:url . "https://github.com/syohex/emacs-sound-wav") (:commit . "406868043761524118c27b1207be0f8bbda8798e")) nil) nil nil) (package-install 'sound-wav nil) (find-file "/Users/Em/.emacs.d/personal/location-settings.el" t) (package-install 'osx-location nil) (package-delete #s(package-desc osx-org-clock-menubar (20150205 1311) "simple menubar integration for org-clock" nil nil nil "/Users/Em/.emacs.d/elpa/osx-org-clock-menubar-20150205.1311" ((:url . "https://github.com/jordonbiondo/osx-org-clock-menubar") (:keywords "org" "osx")) nil) nil nil) (package-install 'osx-org-clock-menubar nil) (package-install 'calfw-cal nil) (package-install 'calfw-org nil) (package-install 'calfw-ical nil) (package-delete #s(package-desc calfw-org (20160302 1858) "calendar view for org-agenda" nil nil nil "/Users/Em/.emacs.d/elpa/calfw-org-20160302.1858" ((:keywords "calendar" "org") (:commit . "03abce97620a4a7f7ec5f911e669da9031ab9088")) nil) nil nil) (package-install 'calfw-org nil) (package-delete #s(package-desc calfw-gcal (20120111 200) "edit Google calendar for calfw.el." nil nil nil "/Users/Em/.emacs.d/elpa/calfw-gcal-20120111.200" ((:url . "https://github.com/myuhe/calfw-gcal.el") (:keywords "convenience" "calendar" "calfw.el")) nil) nil nil) (package-install 'calfw nil) (package-install 'calfw-gcal nil) (package-install 'org-gcal nil) (customize-group "org") (find-file "/Volumes/JumpShip/Inbox/" t) (find-file "/Volumes/JumpShip/Helm" t) (find-file "/Volumes/JumpShip/CaptainsLog/" t) (find-file "/Volumes/JumpShip/HomeBase/" t) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/tasks.org" t) (customize-group "org") (customize-apropos-options '("log")) (customize-group "org-time") (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/tasks.org" t) (browse-web "onity edht221 hacking") (browse-web "onity edht221") (customize-group "org-keywords") (find-file "/Users/Em/.emacs.d/personal/color-settings.el" t) (find-file "/Users/Em/.emacs.d/personal/color-settings.el" t) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/tasks.org" t) (neotree-hide) (neotree-show) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-workflowy.org" t) (find-file "/Users/Em/.emacs.d/personal/color-settings.el" t) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-workflowy.org" t) (table-insert "2x2" "3" "5" "1") (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-workflowy.org" t) (yas-load-snippet-buffer-and-close 'org-mode nil) (load-library "ob-python") (load-library "ob-python") (org-babel-execute-src-block) (package-install 'elpygen nil) (customize-group "paren-matching") (package-install 'python-x nil) (package-install 'readline-complete nil) (python-shell-completion-native-toggle 1) (find-file "/Volumes/JumpShip/Lab/Utils/" t) (find-file "/Users/Em/.emacs.d/personal/source-settings.el" t) (list-directory "/Volumes/JumpShip/Lab/Utils/") (find-file "/Users/Em/.emacs.d/personal/source-settings.el" t) (package-delete #s(package-desc pynt (20180410 1715) "Generate and scroll EIN buffers from python code" ((emacs (24 4)) (ein (0 13 1)) (epc (0 1 1)) (deferred (0 5 1))) nil nil "/Users/Em/.emacs.d/elpa/pynt-20180410.1715" ((:url . "https://github.com/ebanner/pynt") (:keywords "convenience") (:commit . "313dd24248f26ee1257b8b20885c593d8fb19d58")) nil) nil nil) (org-babel-execute-buffer nil) (customize-apropos '("neo-file") nil) (find-file "/Volumes/JumpShip/Lab/Utils/coordinates.org" t) (find-file "/Volumes/JumpShip/Lab/Projects/Utils/coordinates.orf" t) (find-file "/Volumes/JumpShip/Lab/Projects/" t) (customize-apropos '("font") nil) (customize-group "neotree") (neotree-show) (ibuffer-sidebar-show-sidebar) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-notes.org" t) (find-file "/Volumes/JumpShip/Lab/Projects/HolidayInn/scraper.org" t) (find-file "/Volumes/JumpShip/" t) (customize-group "minibuffer") (Buffer-menu-bury) (Buffer-menu-switch-other-window) (ibuffer-sidebar-show-sidebar) (ibuffer-sidebar-toggle-sidebar) (ibuffer-sidebar-show-sidebar) (customize-group "ibuffer-sidebar") (ibuffer-sidebar-show-sidebar) (package-install 'ibuffer-sidebar nil) (load-theme 'doom-city-lights nil nil) (find-file "file:/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/metrics.org::*Critical Hotel Metrics" t) (load-theme 'doom-solarized-light nil nil) (customize-apropos '("buffer") nil) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/tasks.org" t) (org-refile nil) (find-file "/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/metrics.org" t) (find-file "/Volumes/JumpShip/" t) (org-edit-latex-mode 'toggle) (org-edit-latex-mode 'toggle) (customize-apropos-options '("todo")) (customize-group "org-tags") (latex-preview-pane-mode 'toggle) (org-edit-latex-mode 'toggle) (org-edit-latex-mode 'toggle) (org-edit-latex-mode 'toggle) (latex-preview-pane-mode 'toggle) (org-edit-latex-mode 'toggle)))
(setq compile-history '("make -k "))
(setq grep-history '("grep --color -nH --null -e headline" "grep --color -nH --null -e heading" "grep --color -nH --null -e head"))
(setq org-tags-history '(#("IOTHELL" 0 7 (ivy-index 0)) #("TROUBLES" 0 8 (ivy-index 0)) #(":DECOMP:REPEAT" 0 14 (ivy-index 0)) #(":INIT:REPEAT" 0 12 (ivy-index 0)) #("LUNCH" 0 5 (ivy-index 0)) #("DECOMP" 0 6 (ivy-index 0)) #("INIT" 0 4 (ivy-index 0)) #("EMAIL" 0 5 (ivy-index 0)) #("EXIT" 0 4 (ivy-index 0)) #("TASKS" 0 5 (ivy-index 0)) #("REMEMBER" 0 8 (ivy-index 0)) #("LINKS" 0 5 (ivy-index 0)) #("FILES" 0 5 (ivy-index 0)) #("ARCHIVE" 0 7 (ivy-index 0)) #("SYMBOLS" 0 7 (ivy-index 0)) #("DISTANCE" 0 8 (ivy-index 0)) #(":HOLIDAYINN:WORKFLOWY" 0 21 (ivy-index 0)) #("HOLIDAYINN" 0 10 (ivy-index 0)) #("GEOIP" 0 5 (ivy-index 0)) #("LECTURE" 0 7 (ivy-index 0)) #("QUESTIONS" 0 9 (ivy-index 0)) #("UNSORTED" 0 8 (ivy-index 0)) #("WEB_APPS" 0 8 (ivy-index 0)) #("USER_EXPERIENCE" 0 15 (ivy-index 0)) #("TRAVEL" 0 6 (ivy-index 0)) #("UNIX" 0 4 (ivy-index 0)) #("TOR" 0 3 (ivy-index 0)) #("TCS" 0 3 (ivy-index 0)) #("THEWORKPLACE" 0 12 (ivy-index 0)) #("TEX" 0 3 (ivy-index 0)) #("SUPERUSER" 0 9 (ivy-index 0)) #("STACKOVERFLOW" 0 13 (ivy-index 0)) #("SPACE_EXPLORATION" 0 17 (ivy-index 0)) #("SOFTWARE_RECS" 0 13 (ivy-index 0)) #("QUALITY_ASSURANCE" 0 17 (ivy-index 0)) #("SOFTWARE_ENGINEERING" 0 20 (ivy-index 0)) #("SIGNAL_PROCESSING" 0 17 (ivy-index 0)) #("ROBOTICS" 0 8 (ivy-index 0)) #("REVERSE_ENGINEERING" 0 19 (ivy-index 0)) #("QUANTUM_COMPUTING" 0 17 (ivy-index 0)) #("PUZZLES" 0 7 (ivy-index 0)) #("PROJECT_MANAGEMENT" 0 18 (ivy-index 0)) #("PSYCH_NEUROSCI" 0 14 (ivy-index 0)) #("CODE_GOLF" 0 9 (ivy-index 0)) #("POLITICS" 0 8 (ivy-index 0)) #("POKER" 0 5 (ivy-index 0)) #("PHYSICS" 0 7 (ivy-index 0)) #("PHILOSOPHY" 0 10 (ivy-index 0)) #("PETS" 0 4 (ivy-index 0)) #("OPEN_SOURCE" 0 11 (ivy-index 0)) #("OPEN_DATA" 0 9 (ivy-index 0)) #("NETWORK_ENGINEERING" 0 19 (ivy-index 0)) #("MATHEMATICS" 0 11 (ivy-index 0)) #("MATHOVERFLOW" 0 12 (ivy-index 0)) #("LIFEHACKS" 0 9 (ivy-index 0)) #("LAW" 0 3 (ivy-index 0)) #("INTERPERSONAL_SKILLS" 0 20 (ivy-index 0)) #("INFOSEC" 0 7 (ivy-index 0)) #("HOME_IMPROVEMENT" 0 16 (ivy-index 0)) #("HISTORY" 0 7 (ivy-index 0)) #("HEALTH" 0 6 (ivy-index 0)) #("HARDWARE_RECS" 0 13 (ivy-index 0)) #("GIS" 0 3 (ivy-index 0)) #("FREELANCING" 0 11 (ivy-index 0)) #("ENGINEERING" 0 11 (ivy-index 0)) #("EMACS" 0 5 (ivy-index 0)) #("ELECTRICAL_ENGINEERING" 0 22 (ivy-index 0)) #("EBOOKS" 0 6 (ivy-index 0)) #("EARTH_SCIENCE" 0 13 (ivy-index 0)) #("DATA_SCIENCE" 0 12 (ivy-index 0)) #("CROSS_VALIDATED" 0 15 (ivy-index 0)) #("CRYPTOGRAPHY" 0 12 (ivy-index 0)) #("COMPUTER_SCIENCE" 0 16 (ivy-index 0)) #("COMPUTATIONAL_SCIENCE" 0 21 (ivy-index 0)) #("ASTRONOMY" 0 9 (ivy-index 0)) #("ASK_DIFFERENT" 0 13 (ivy-index 0)) #("STACKEXCHANGE" 0 13 (ivy-index 0)) #("WISHLIST" 0 8 (ivy-index 0))))
(setq ido-file-history '("." "candied-bacon.org" "common-blood-tests.org"))
(setq minibuffer-history '("log" "Workflowy" "Keyword Colors" "org-mode" "neo-file" "font" "buffer" "Critical Hotel Metrics" "todo" "epub" "book" "ereader" "Habits" "Communications Log" "Appointments" "kms.werx@gmail.com" "HolidayInn" "fc244d68a19c429db63fa06ed12d7eb9217620beb7c402cfc0fd632d8308f7fc" "8ad9362d456d1c179bce702cfcb37029" "fc244d68a19c429db63fa06ed12d7eb9217620beb7c402cfc0fd632d8308f7fc" "8ad9362d456d1c179bce702cfcb37029" "kms.werx@gmail.com" "Status of World Nuclear Forces" "Schedule" "Units" "Neutral" "Negative" "Positive" "Results" "PST" "Component" "Symbols" "Axioms" "Definitions" "Theorems" "Acronyms" "Components" "Supervisors" "Organizations" "Networks" "Experience" "Funding" "Today" "PostGrad" "Today" "Universities" "Achieve" "Target" "Interests" "Development" "LIST_PHASE" "LIST_SUBJECTAREA" "Form" "Templates" "PHASE" "SUBJECT_AREA" "NAME" "RECOMMENDATION" "PRIORITY" "DESCRIPTION" "PROJECT_ID" "LESSON" "DATE" "LESSON_NO" "Schema" "Database" "Lesson" "org-mode" "Exile" "file:/Volumes/JumpShip/Lab/Brain/Exile.org" "Reading Algorithms" "file:/Volumes/JumpShip/Algorithms/reading-algorithm.org" "Algorithms" "/Volumes/JumpShip/Algorithms" "Checklist" #("preload" 0 7 (dired-filename t mouse-face highlight help-echo "mouse-2: visit this file in other window" fontified t face dired-directory)) "head" "heading" "headline" "Questions" "Notes" "Habits" "Grocery List" "groceries.org" "Communications Log" "Appointments" "org-mode"))
(setq swiper-history '(#(" " 0 1 (swiper-line-number "36 " display "36 "))))
(setq file-name-history '(#("/Volumes/JumpShip/Clouds/Dropbox/Exile/habits.org" 0 49 (ivy-index 5)) #("/Users/Em/.emacs.d/personal/location-settings.el" 0 48 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/" 0 24 (ivy-index 14)) #("/Volumes/JumpShip/Helm" 0 22 (ivy-index 28)) #("/Volumes/JumpShip/CaptainsLog/" 0 30 (ivy-index 12)) #("/Volumes/JumpShip/HomeBase/" 0 27 (ivy-index 13)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/tasks.org" 0 54 (ivy-index 15)) #("/Users/Em/.emacs.d/personal/color-settings.el" 0 45 (ivy-index 6)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-workflowy.org" 0 68 (ivy-index 13)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/snippets/org-mode/python-block" 0 69 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Utils/" 0 28 (ivy-index 3)) "/Volumes/JumpShip/Lab/Utils/ *org-src-fontification:python-mode*" "/Volumes/JumpShip/Lab/Utils/*Org-Babel Preview coordinates.org[ python ]*" #("/Users/Em/.emacs.d/personal/source-settings.el" 0 46 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/Utils/coordinates.orf" 0 52 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/" 0 31 (ivy-index 1)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/holidayinn-notes.org" 0 64 (ivy-index 5)) #("/Volumes/JumpShip/Lab/Projects/HolidayInn/scraper.org" 0 53 (ivy-index 0)) #("/Volumes/JumpShip/" 0 18 (ivy-index 2)) "file:/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/metrics.org::*Critical Hotel Metrics" #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Werx/metrics.org" 0 55 (ivy-index 12)) #("/Volumes/JumpShip/Inbox/Clouds/" 0 31 (ivy-index 2)) #("/Users/Em/.emacs.d/personal/pdf-settings.el" 0 43 (ivy-index 0)) #("/Users/Em/.emacs.d/" 0 19 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/notes.org" 0 54 (ivy-index 5)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/habits.org" 0 55 (ivy-index 4)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/communications-log.org" 0 67 (ivy-index 3)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/appointments.org" 0 61 (ivy-index 2)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/holidayinn-service-schedule.org" 0 76 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/holidayinn-personal.org" 0 68 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/holidayinn-tasks.org" 0 65 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/" 0 45 (ivy-index 6)) #("/Users/Em/.emacs.d/.trello/kms.werx@gmail.com.el" 0 48 (ivy-index 2)) #("/Users/Em/.emacs.d/.trello/" 0 27 (ivy-index 3)) #("/Volumes/JumpShip/Work/HolidayInn/trello-holidayinn.org" 0 55 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/wishlist.org" 0 56 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/refile.org_archive" 0 62 (ivy-index 3)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/refile.org" 0 54 (ivy-index 4)) #("/Volumes/JumpShip/Lab/Projects/WMD/wmd.org/" 0 43 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/WMD/wmd.org" 0 42 (ivy-index 0)) #("/Volumes/JumpShip/Work/schedule.org" 0 35 (ivy-index 10)) #("/Volumes/JumpShip/Lab/Projects/Brain/" 0 37 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/Brain/Index.org" 0 46 (ivy-index 4)) #("/Volumes/JumpShip/Lab/" 0 22 (ivy-index 0)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Eng2/20180508-notes.org" 0 74 (ivy-index 2)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Eng2/essay.org" 0 65 (ivy-index 0)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Eng2/" 0 56 (ivy-index 3)) #("/Volumes/JumpShip/Work/Academic/Development/development.org/" 0 60 (ivy-index 0)) #("/Volumes/JumpShip/Work/Academic/Development/development.org" 0 59 (ivy-index 0)) #("/Volumes/JumpShip/Work/Academic/" 0 32 (ivy-index 0)) #("/Volumes/JumpShip/Work/" 0 23 (ivy-index 1)) #("/Volumes/JumpShip/Lab/Projects/LLDB/" 0 36 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Exile/readlater.org" 0 58 (ivy-index 9)) #("/Volumes/JumpShip/Lab/Projects/LuckyNumbers/" 0 44 (ivy-index 1)) #("/Volumes/JumpShip/Library/Standards/iso-8601.org" 0 48 (ivy-index 2)) #("/Volumes/JumpShip/Library/Standards/" 0 36 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/LLDB/schema.org" 0 46 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/snippets/org-mode/readme" 0 63 (ivy-index 0)) #("/Volumes/JumpShip/Lab/Projects/LLDB/README.org" 0 46 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/appointments.org" 0 60 (ivy-index 0)) #("/Volumes/JumpShip/Exile" 0 23 (ivy-index 27)) #("/Volumes/JumpShip/HomeBase/SwedishChef/candied-bacon.org" 18 22 (face flx-highlight-face) 27 29 (face flx-highlight-face)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/oven-bacon.org" 0 58 (ivy-index 7)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/task-log.org" 0 56 (ivy-index 13)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/" 0 44 (ivy-index 0)) #("/Users/" 0 7 (ivy-index 5)) #("/Volumes/JumpShip/Library/" 0 26 (ivy-index 0)) #("/Volumes/JumpShip/System/" 0 25 (ivy-index 19)) #("/Volumes/JumpShip/brain/" 0 24 (ivy-index 7)) #("/Volumes/JumpShip/brain/*org-brain*/" 0 36 (ivy-index 2)) #("/Volumes/JumpShip/brain/*org-brain*" 0 35 (ivy-index 0)) #("/Volumes/JumpShip/index.org" 0 27 (ivy-index 0)) #("/Volumes/JumpShip/Work/HolidayInn/work-log.org" 0 46 (ivy-index 0)) #("/work-log.org" 0 13 (ivy-index 0)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Eng2/eng2-outline.org" 0 72 (ivy-index 3)) #("/Volumes/JumpShip/Lab/Projects/Brain/brain.org" 0 46 (ivy-index 0)) #("/Users/Em/.emacs.d/personal/exile.el" 0 36 (ivy-index 11)) #("/Users/Em/.emacs.d/personal/exile-theme.el" 0 42 (ivy-index 9)) "/Users/Em/.emacs.d/personal" #("/Users/Em/.emacs.d/personal/custom.el" 0 37 (ivy-index 6)) #("/Users/Em/.emacs.d/personal/" 0 28 (ivy-index 8)) #("/Volumes/JumpShip/HomeBase/Family/Health/common-blood-tests.org" 27 34 (face flx-highlight-face)) #("/Volumes/JumpShip/Library/quotes.org" 0 36 (ivy-index 0)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/quotes.org" 0 54 (ivy-index 8)) #("/Users/Em/.emacs.d/personal/exile-capture-templates.el" 0 54 (ivy-index 7)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/questions.org" 0 57 (ivy-index 7)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/notes.org" 0 53 (ivy-index 6)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/habits.org" 0 54 (ivy-index 5)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/groceries.org" 0 57 (ivy-index 4)) #("/Volumes/JumpShip/Inbox/Clouds/Dropbox/Helm/communications-log.org" 0 66 (ivy-index 3)) #("/Volumes/JumpShip/Work/HolidayInn/work-schedule.org" 0 51 (ivy-index 2)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Reports/senior-report.org" 0 76 (ivy-index 0)) #("/Volumes/JumpShip/Work/Tutoring/Students/JThompson/Reports/" 0 59 (ivy-index 1)) #("/Volumes/JumpShip/Work/BugZapper/bugszapped.org" 0 47 (ivy-index 0)) #("/Volumes/JumpShip/Work/BugZapper/" 0 33 (ivy-index 0)) #("/Volumes/JumpShip/Work/BugZapper" 0 32 (ivy-index 0)) "~/Desktop/exile.el" "~/Desktop/exile-scratch.el"))
(setq ivy-history '(#("projectile" 0 10 (ivy-index 16)) #("project" 0 7 (ivy-index 12)) #("org-pr" 0 6 (ivy-index 2)) #("org-" 0 4 (ivy-index 13)) "nordless" #("nord" 0 4 (ivy-index 0)) #("soun" 0 4 (ivy-index 2)) #("sou" 0 3 (ivy-index 0)) #("osx" 0 3 (ivy-index 5)) "osx-org-clock-menubar-20150205.1311" #("cal" 0 3 (ivy-index 3)) "calfw-org-20160302.1858" "calfw-gcal-20120111.200" #("gc" 0 2 (ivy-index 4)) "org" #("keywo" 0 5 (ivy-index 0)) #("ob-p" 0 4 (ivy-index 9)) #("elpy" 0 4 (ivy-index 0)) #("paren" 0 5 (ivy-index 5)) #("pyt" 0 3 (ivy-index 14)) #("readl" 0 5 (ivy-index 0)) #("p" 0 1 (ivy-index 12)) #("neo" 0 3 (ivy-index 4)) #("mini" 0 4 (ivy-index 0)) #("ibu" 0 3 (ivy-index 1)) #("ibuffer" 0 7 (ivy-index 3)) "doom-city-lights" "doom-solarized-light" #("tags" 0 4 (ivy-index 0)) #("keyw" 0 4 (ivy-index 1)) #("pyn" 0 3 (ivy-index 0)) #("ein" 0 3 (ivy-index 0)) #("pape" 0 4 (ivy-index 2)) #("nov" 0 3 (ivy-index 0)) #("helm" 0 4 (ivy-index 29)) #("xml" 0 3 (ivy-index 2)) #("s-" 0 2 (ivy-index 139)) #("cl-" 0 3 (ivy-index 1)) #("googl" 0 5 (ivy-index 4)) #("xkcd" 0 4 (ivy-index 0)) #("sx" 0 2 (ivy-index 13)) #("ob-" 0 3 (ivy-index 17)) #("view" 0 4 (ivy-index 19)) #("math" 0 4 (ivy-index 2)) "zenburn" #("org-a" 0 5 (ivy-index 1)) #("org-tr" 0 6 (ivy-index 3)) #("org-tre" 0 7 (ivy-index 1)) #("time" 0 4 (ivy-index 18)) #("clock" 0 5 (ivy-index 10)) "doom-one-light" #("org-not" 0 7 (ivy-index 0)) #("inter" 0 5 (ivy-index 3)) #("WMDs" 0 4 (ivy-index 0)) "Dictionary" "Dictionary" "Acronyms" "Index" #("Development Plan" 0 16 (ivy-index 0)) #("Development" 0 11 (ivy-index 0)) #("README:" 0 7 (ivy-index 0)) "README::Schema" "README::DATE" "README::LESSON_NO" #("LESSON  " 0 8 (ivy-index 0)) #("LESSON" 0 6 (ivy-index 0)) "README::Database" "doom-city-lights" #("README::DATE" 0 12 (ivy-index 0)) #("keyword" 0 7 (ivy-index 7)) #("todo" 0 4 (ivy-index 6)) "README" "tsdh-light" "README" #("Database" 0 8 (ivy-index 0)) "README" "schema" "README" "LLDB Schema" "LLDB Schema" "Role" "Recommendation" "Project" "Phase" "Lesson Number" "Importance" "Date" "Area" "Author" "Lesson Description" "Lesson Number::Lesson" "Lesson" "LLDB Schema" "Lesson Number" #("Area" 0 4 (ivy-index 0)) #("Phase" 0 5 (ivy-index 0)) #("Importance" 0 10 (ivy-index 0)) #("Recommendation" 0 14 (ivy-index 0)) #("Lesson Description" 0 18 (ivy-index 0)) #("Project" 0 7 (ivy-index 0))))
(setq counsel-M-x-history '(#("^" 0 1 (ivy-index 0)) #("^loa" 0 4 (ivy-index 0)) #("^pac" 0 4 (ivy-index 1)) #("^p" 0 2 (ivy-index 0)) #("^neot" 0 5 (ivy-index 5)) #("^neo" 0 4 (ivy-index 0)) #("^load" 0 5 (ivy-index 2)) #("^org-babel-exec" 0 15 (ivy-index 3)) #("^pa" 0 3 (ivy-index 1)) #("^python-shell-c" 0 15 (ivy-index 0)) #("^org-bab" 0 8 (ivy-index 12)) #("^neotr" 0 6 (ivy-index 0)) #("^ibu" 0 4 (ivy-index 0)) #("^fin" 0 4 (ivy-index 0)) #("^buffer-menu" 0 12 (ivy-index 2)) #("^buffer" 0 7 (ivy-index 35)) #("^im" 0 3 (ivy-index 0)) #("^ibuffer-si" 0 11 (ivy-index 3)) #("^ibuffer-s" 0 10 (ivy-index 3)) #("^org-re" 0 7 (ivy-index 0)) #("^customize" 0 10 (ivy-index 3)) #("org-ed" 0 6 (ivy-index 0)) #("^latex-p" 0 8 (ivy-index 1)) #("^org-edit-l" 0 11 (ivy-index 0)) #("^edit-" 0 6 (ivy-index 8)) #("^package-re" 0 11 (ivy-index 1)) #("^cus" 0 4 (ivy-index 0)) #("^org-trello" 0 11 (ivy-index 22)) #("^package-" 0 9 (ivy-index 0)) #("^f" 0 2 (ivy-index 0)) #("^org-tre" 0 8 (ivy-index 14)) #("^org-trello-i" 0 13 (ivy-index 1)) #("^svg" 0 4 (ivy-index 0)) #("^org-no" 0 7 (ivy-index 0)) #("^packag" 0 7 (ivy-index 1)) #("^pdf" 0 4 (ivy-index 3)) #("^wind" 0 5 (ivy-index 2)) #("^org-bra" 0 8 (ivy-index 3)) "org-brain-visualize" #("^org-brain-" 0 11 (ivy-index 1)) #("^ne" 0 3 (ivy-index 1)) #("^packa" 0 6 (ivy-index 1)) #("^org-brain-d" 0 12 (ivy-index 0)) #("^org-brain" 0 10 (ivy-index 43)) #("^find" 0 5 (ivy-index 0)) #("^org-brain-add" 0 14 (ivy-index 2)) #("^org-mode" 0 9 (ivy-index 0)) #("^neotree-c" 0 10 (ivy-index 1)) #("^fi" 0 3 (ivy-index 0)) #("^neotree" 0 8 (ivy-index 5)) #("^org-brain-g" 0 12 (ivy-index 0)) #("^org" 0 4 (ivy-index 0)) #("^find-" 0 6 (ivy-index 1)) #("^org-bu" 0 7 (ivy-index 0)) #("^o" 0 2 (ivy-index 8)) #("^na" 0 3 (ivy-index 1)) #("^clone" 0 6 (ivy-index 2)) #("^neotree-s" 0 10 (ivy-index 0)) #("display-i" 0 9 (ivy-index 0)) "package-install" #("^all" 0 4 (ivy-index 3)) #("^whites" 0 7 (ivy-index 2)) #("^spaceline-" 0 11 (ivy-index 44)) #("^spa" 0 4 (ivy-index 2)) #("^spac" 0 5 (ivy-index 1)) #("^package-r" 0 10 (ivy-index 1)) #("^lo" 0 3 (ivy-index 2)) #("load-t" 0 6 (ivy-index 1)) #("pack" 0 4 (ivy-index 6)) #("stric" 0 5 (ivy-index 1))))
(setq search-ring '(#("buff" 0 4 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq regexp-search-ring 'nil)
