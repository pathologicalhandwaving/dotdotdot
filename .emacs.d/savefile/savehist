;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history command-history ialign--history org-capture--prompt-history org-refile-history ido-file-history org-tags-history swiper-history org--links-history org-read-date-history file-name-history minibuffer-history helm-M-x-input-history))
(setq coding-system-history '("raw-text" "utf-8" "utf-8-mac" "utf-8-mac"))
(setq command-history '((package-install 'helm-sage nil) (helm-M-x nil #("package-install" 0 15 (match-part "package-install"))) (find-file "/Users/Em/.emacs.d/personal/basic-settings.el" t) (helm-M-x nil "find-file") (load-theme 'doom-city-lights nil nil) (helm-M-x nil "load-theme") (find-file "/Users/Em/Repos/Tutoring/Students/JThompson/Psych/grades.org" t) (helm-M-x nil "find-file") (find-file "/Users/Em/Repos/Tutoring/Students/JThompson/" t) (helm-M-x nil "find-file") (find-file "/Users/Em/Repos/Tutoring/Students/JThompson/Psych/grades.org" t) (helm-M-x nil #("find-file" 0 9 (match-part "find-file"))) (package-install 'org-vcard nil) (helm-M-x nil "package-install") (find-file "/Users/Em/Repos/ImInSpace/Notes/Cards/psych.org" t) (helm-M-x nil "find-file") (package-install 'pamparam nil) (helm-M-x nil "package-install") (package-install 'org-drill-table nil) (helm-M-x nil "package-install") (yas-tryout-snippet nil) (helm-M-x nil "yas-tryout-snippet") (customize-group "applications") (customize-group "applications") (org-agenda-write "/Users/Em/Repos/ImInSpace/CaptainsLog/agenda.org" nil) (org-agenda-write "/Users/Em/.emacs.d/personal/" nil) (org-insert-link nil) (helm-M-x nil #("org-insert-link" 0 15 (match-part "org-insert-link"))) (load-library "ob-python") (helm-M-x nil "load-library") (find-file "/Users/Em/Users/Em/Repos/ImInSpace/Source/weekNumber.org" t) (helm-M-x nil "find-file") (load-theme 'org-beautify nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-city-lights nil nil) (helm-M-x nil "load-theme") (load-theme 'labburn nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-molokai nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-one nil nil) (helm-M-x nil "load-theme") (load-theme 'arjen-grey nil nil) (helm-M-x nil "load-theme") (load-theme 'adwaita nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-vibrant nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-city-lights nil nil) (helm-M-x nil "load-theme") (load-theme 'material nil nil) (helm-M-x nil "load-theme") (load-theme 'challenger-deep nil nil) (helm-M-x nil "load-theme") (org-bullets-mode 'toggle) (helm-M-x nil "org-bullets-mode") (load-theme 'org-beautify nil nil) (helm-M-x nil "load-theme") (load-theme 'labburn nil nil) (helm-M-x nil "load-theme") (load-theme 'material-light nil nil) (helm-M-x nil "load-theme") (package-install 'material-theme nil) (helm-M-x nil "package-install") (package-install 'engine-mode nil) (helm-M-x nil "package-install") (package-install 'treemacs nil) (helm-M-x nil "package-install") (package-install 'org-wild-notifier nil) (helm-M-x nil "package-install") (package-install 'org-fancy-priorities nil) (helm-M-x nil "package-install") (browse-web "http://www.soundboard.com/sb/Real_Genius_audio") (package-install 'term-alert nil) (helm-M-x nil "package-install") (package-install 'ac-helm nil) (helm-M-x nil "package-install") (package-install 'pomidor nil) (helm-M-x nil "package-install") (package-install 'org-mru-clock nil) (helm-M-x nil "package-install") (package-install 'clocker nil) (helm-M-x nil "package-install") (package-install 'color-theme-sanityinc-tomorrow nil) (helm-M-x nil "package-install") (load-theme 'challenger-deep nil nil) (helm-M-x nil "load-theme") (load-theme 'org-beautify nil nil) (helm-M-x nil "load-theme") (load-theme 'challenger-deep nil nil) (helm-M-x nil "load-theme") (load-theme 'doom-one nil nil) (helm-M-x nil "load-theme") (load-theme 'labburn nil nil) (helm-M-x nil "load-theme") (org-bullets-mode 'toggle) (helm-M-x nil "org-bullets-mode") (package-install 'helm-books nil) (helm-M-x nil "package-install") (package-install 'image-dired+ nil) (helm-M-x nil "package-install")))
(setq org-capture--prompt-history '("English 4 Essay"))
(setq ido-file-history '("jthompson.tex" "intro-literate-programming.org" "jthompson-dash.org" "default.bib"))
(setq org-tags-history '(":WRITING:" "WRITING" "cards" "APPOINTMENT" "FOLLOWUP" ":FOLLOWUP:" "FOLLOWUP"))
(setq swiper-history '(#(" **** Essay" 0 1 (display "202 " swiper-line-number "202 ") 1 4 (keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-hide fontified t) 4 6 (keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-level-4 fontified t) 6 11 (face org-level-4 fontified t))))
(setq org--links-history '("eshell:"))
(setq org-read-date-history '("   " "2018-04-13    " "11:30    " "   "))
(setq file-name-history '(#("/Users/Em/.emacs.d/personal/basic-settings.el" 0 45 (ivy-index 0)) #("/Users/Em/Repos/Tutoring/Students/JThompson/Psych/grades.org" 0 60 (ivy-index 0)) #("/Users/Em/Repos/Tutoring/Students/JThompson/" 0 44 (ivy-index 0)) #("/Users/Em/Repos/ImInSpace/Notes/Cards/psych.org" 0 47 (ivy-index 0)) "~/Repos/ImInSpace/CaptainsLog/agenda.org" #("/Users/Em/Users/Em/Repos/ImInSpace/Source/weekNumber.org" 0 56 (ivy-index 0)) #("/Users/Em/Repos/ImInSpace/Brains/brain.org" 0 42 (ivy-index 2)) #("/Users/Em/Repos/ImInSpace/Notes/" 0 32 (ivy-index 16)) "~/.emacs.d/personal/settings.el" #("/Users/Em/Desktop/jthompson.tex" 10 17 (face flx-highlight-face)) #("/Users/Em/Repos/Tutoring/Students/JThompson/Eng4/" 0 49 (ivy-index 3)) #("/Users/Em/.emacs.d/" 0 19 (ivy-index 0)) #("/Users/Em/.emacs.d/core/" 0 24 (ivy-index 4)) #("/Users/Em/.emacs.d/themes/" 0 26 (ivy-index 12)) #("/Users/Em/Downloads/init-org.org" 0 32 (ivy-index 8)) #("/Users/Em/Documents/" 0 20 (ivy-index 0)) "~/.emacs.d/snippets/org-mode/sleepcycle" #("/Users/" 0 7 (ivy-index 5)) "/Users/Em/Repos/ImInSpace/Notes/intro-literate-programming.org" #("/Users/Em/Repos/ImInSpace/Notes/elisp-mathfunctions.org" 0 55 (ivy-index 3)) #("/Users/Em/Repos/Tutoring/Students/JThompson/jthompson-dash.org" 10 15 (face flx-highlight-face) 16 24 (face flx-highlight-face) 25 27 (face flx-highlight-face) 34 43 (face flx-highlight-face)) #("/Users/Em/Repos/Tutoring/Jeremie/April/paper-imagecredit.org" 0 60 (ivy-index 0)) #("/Users/Em/Repos/Tutoring/Jeremie/" 0 33 (ivy-index 5)) #("/Users/Em/" 0 10 (ivy-index 2)) "~/Repos/Tutoring/Jeremie/April/outline.org" #("/Users/Em/Repos/Tutoring/Jeremie/April/jthompson-dash.org" 0 57 (ivy-index 0)) #("/Users/Em/Repos/ImInSpace/CaptainsLog/Health/tracking.org" 0 57 (ivy-index 0)) "/Users/Em/Repos/ImInSpace/Library/Refs/default.bib" #("/Users/Em/Repos/Tutoring/Jeremie/April/" 0 39 (ivy-index 2)) #("/Users/Em/Repos/Tutoring/Jeremie/Error/" 0 39 (ivy-index 3)) #("/Users/Em/Repos/ImInSpace/CaptainsLog/Health/" 0 45 (ivy-index 2)) "~/Repos/ImInSpace/Library/Refs/readlater.org" "~/Repos/ImInSpace/Library/Refs/default.bib" "~/Repos/ImInSpace/Library/Dictionary/glossary.org" "~/Repos/ImInSpace/Library/Dictionary/emacs-glossary.org" "~/Repos/ImInSpace/Library/Dictionary/dictionary.org" "~/Repos/ImInSpace/Library/Dictionary/anti-glossary.org" "~/Repos/ImInSpace/Library/Dictionary/acronyms.org" "~/Repos/ImInSpace/CaptainsLog/logs.org" "~/Repos/ImInSpace/CaptainsLog/appointments.org" "~/Repos/ImInSpace/CaptainsLog/todos.org" #("/Users/Em/Repos/ImInSpace/CaptainsLog/agenda.org" 0 48 (ivy-index 5)) #("/Users/Em/Repos/ImInSpace/CaptainsLog/" 0 38 (ivy-index 4)) #("/Users/Em/Repos/ImInSpace/CaptainsLog/captainslog.org" 0 53 (ivy-index 7)) "~/Repos/ImInSpace/CaptainsLog/inbox.ics" #("/Users/Em/Repos/ImInSpace/" 0 26 (ivy-index 0)) "~/.emacs.d/personal/custom.el"))
(setq minibuffer-history '("DocNorang" "Basic" "age" "" "car" "pam" "org-dr" "org" "ap" "" "/Users/Em/Repos/ImInSpace/CaptainsLog/agenda.org" "/Users/Em/.emacs.d/personal/" "Python WeekNumber Script" "ob-p" "" "org" "lab" "" "mate" "eng" "tree" "org" "org-" "http://www.soundboard.com/sb/Real_Genius_audio" "aler" "" "pomi" "clock" "san" "" "helm" "ima" "img" "ima" "im" "head" "link" "org-" "dash" "das" "swip" "or" "pret" "def" "trac" "sheet" "time" "cloc" "clock" "bloc" "tor" "goo" "gca" "gma" "db" "org" "helm-" "Repos" "" "Dropbox" "" "Dropbox" "External SubModules" "ImInSpace" "" "/Users/Em/Repos/ImInSpace/brain/" "Tor" "Alfred" "Keyboard Maestro" "Modules" "" "System Designer" "" "Applications" "" "Emacs::orgmode" "" "Emacs::elisp" "" "orgmode" "elisp" "" "Emacs" "ob-sh" "use-p" "/Users/Em/.emacs.d/personal/" "sh" "org" "angr" "" "osx" "sx" "org" "JThompson Dashboard" "" "/Users/Em/Documents/Dropbox/ToGo/q" "previ" "org-" "org-b" "ToGo"))
(setq helm-M-x-input-history '("packa" "find-file" "load-t" "find-file" "pac" "find-file" #("x" 0 1 (fontified t)) "packa" "insert-l" "load-li" "find-file" "load-th" "org-bul" "load" "pack" #("OMG!" 0 4 (face font-lock-string-face fontified t)) #("degenerate.wav" 0 14 (face font-lock-string-face fontified t)) #("d/blob/master/lisp/init-org" 0 27 (font-lock-multiline t keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link help-echo "LINK: https://github.com/jbranso/.emacs.d/blob/master/lisp/init-org.org#my-org-capure-templates" fontified t htmlize-link (:uri "https://github.com/jbranso/.emacs.d/blob/master/lisp/init-org.org#my-org-capure-templates"))) #("org/emacs/AndyStewart" 0 20 (font-lock-multiline t keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link help-echo "LINK: https://www.emacswiki.org/emacs/AndyStewart" fontified t htmlize-link (:uri "https://www.emacswiki.org/emacs/AndyStewart")) 20 21 (font-lock-multiline t keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link help-echo "LINK: https://www.emacswiki.org/emacs/AndyStewart" fontified t htmlize-link (:uri "https://www.emacswiki.org/emacs/AndyStewart") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link))) #("here" 0 4 (face font-lock-comment-face fontified t)) "strict" #("pdf-view-mode-map" 0 17 (fontified t)) "org-bu" "load-theme" "csv" "package-r" #("works" 0 5 (face font-lock-comment-face fontified t)) "pack" "org-brain-add-parent" #("External" 0 8 (help-echo nil follow-link t action #[257 "\301\300!\207" ["External SubModules" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) "ImInSpace" #("ImInSpace-+-Dropbox" 0 9 (help-echo nil follow-link t action #[257 "\301\300!\207" ["ImInSpace" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t)) 12 19 (help-echo nil follow-link t action #[257 "\301\300!\207" ["Dropbox" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) "ImInSpace" #("External" 0 8 (help-echo nil follow-link t action #[257 "\301\300!\207" ["External SubModules" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) "ImInSpace" "org-brain-vi" #("OrgMode-+-Tor" 0 7 (help-echo nil follow-link t action #[257 "\301\300!\207" [("Emacs" "OrgMode" "1B1CEE07-C6D4-42A0-8F77-6F793EF818EC") org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t)) 10 13 (help-echo nil follow-link t action #[257 "\301\300!\207" ["Tor" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) "org-brain-re" "OrgMode" "Applications" #("Modules" 0 7 (help-echo nil follow-link t action #[257 "\301\300!\207" ["Modules" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) #("1B1CEE07-C6D4-42A0-8F77-6F793EF818EC" 0 36 (face org-meta-line font-lock-fontified t org-category "Applications" fontified t)) "org-brain-" #("+-Alfred" 2 8 (help-echo nil follow-link t action #[257 "\301\300!\207" ["Alfred" org-brain-visualize] 3 "\n\n(fn X)"] category default-button button (t))) "OrgMode" "orgmode" "org-brain-add-child" "org-brain-add-c" "org-brain-a" "org-brain-visual" "org-brain-visu" "org-brain" "load-" #("*" 0 1 (mouse-face highlight face org-level-1 keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)) composition (0 1 [9819]) org-category "Emacs" fontified t)) "Emacs" "org-brain" "org-bul" "org-brain-open" "org-brain-goto" "Emacs" "org-brain-new" "org-brain-vi" "org-brain-" "org-brain" "org-brain-add" "find-file" "org-bra" "find-file" "load-li" "org-br" "org-bul" "find-file" "package-install" "packa" "prelude-" "package-install" "load-theme" "org-export-as-org" "org-latex-export-as-latex" #("References" 0 10 (fontified t face org-level-2)) #("regardless" 0 10 (fontified t)) "pdf" #("**" 0 1 (fontified t face org-hide mouse-face highlight keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse))) 1 2 (fontified t face org-level-2 mouse-face highlight keymap (keymap (C-down-mouse-1 . org-mouse-move-tree-start) (C-drag-mouse-1 . org-mouse-move-tree) (follow-link . mouse-face) (mouse-3) (mouse-2 . org-open-at-mouse)))) "package" "org-jou" "org-j" "org-jou" "org-bu" "find-file" "org-ca" "load-theme" #("installer" 0 9 (dired-filename t mouse-face highlight help-echo "mouse-2: visit this file in other window" fontified t)) #("el" 0 2 (dired-filename t mouse-face highlight help-echo "mouse-2: visit this file in other window" fontified t)) "find-fil" "org-pr" "html" "find-f" "Apply" "package" "org-bu"))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
