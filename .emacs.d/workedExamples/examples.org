
These examples can be found in the workshop notes: [[http://howardism.org/Technical/Emacs/literate-programming-tutorial.html][Howardism]]



* examples.org

To execute a code block press =C-c C-c=


** List all files in current directory


*** elisp
#+BEGIN_SRC emacs-lisp
  (directory-files ".")
#+END_SRC

#+RESULTS:
| . | .. | .git | README.org | init.org | literateprogramming.org |


**** Shortcut: Create block
To create a source block quickly type: =<s= then =TAB=

**** Shortcut: edit block in mode
Type =C-c '= to edit the block in that language's mode

**** Shortcut: Jump between blocks
Jump to next block with =C-c M-f=
Jump to previous block with =C-c M-b=


*** Ruby
  Load ruby library first: =M-x load-library= then =ob-ruby=

#+BEGIN_SRC ruby
  Dir.entries('.')
#+END_SRC

#+RESULTS:
| . | .. | .#examples.org | .git | examples.org | literateprogramming.org | README.org |



**** Setting: Syntax Highlighting

Set in =init= file

#+BEGIN_SRC emacs-lisp
  (setq org-config-babel-evaluate nil
        org-src-fontify-natively t
        org-src-tab-acts-natively t) ;; This last line removes the "Do you want to execute" prompts
#+END_SRC



*** Python

#+BEGIN_SRC python
  from os import listdir
  return listdir(".")
#+END_SRC

#+RESULTS:
| .#examples.org | .git | examples.org | literateprogramming.org | README.org |

=load-library ob-python=



*** Shell

#+BEGIN_SRC sh
  ls -l
#+END_SRC

#+RESULTS:
| total      | 16 |    |       |      |     |   |       |                         |
| -rw-r--r-- |  1 | Em | staff | 1255 | Apr | 7 | 16:35 | #examples.org#          |
| -rw-r--r-- |  1 | Em | staff |  391 | Apr | 7 | 15:20 | README.org              |
| -rw-r--r-- |  1 | Em | staff | 1011 | Apr | 7 | 16:33 | examples.org            |
| -rw-r--r-- |  1 | Em | staff | 1129 | Apr | 7 | 15:37 | literateprogramming.org |


**** Settings

To load librarys all the time in your init put:

#+BEGIN_SRC emacs-lisp
  (require 'ob-ruby)
  (require 'ob-sh)
  (require 'ob-python)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((sh . t)
     (js . t)
     (emacs-lisp . t)
     (perl . t)
     (scala . t)
     (clojure . t)
     (python . t)
     (ruby . t)
     (dot . t)
     (css . t)
     (plantuml . t)))
#+END_SRC

** Block Parameters


*** Tell block a directory to execute in

#+BEGIN_SRC sh :dir /etc
  ls
#+END_SRC

#+RESULTS:
| AFP.conf                              |
| afpovertcp.cfg                        |
| aliases                               |
| aliases.db                            |
| apache2                               |
| asl                                   |
| asl.conf                              |
| auto_home                             |
| auto_master                           |
| autofs.conf                           |
| bash_completion.d                     |
| bashrc                                |
| bashrc_Apple_Terminal                 |
| bashrc~previous                       |
| com.apple.screensharing.agent.launchd |
| csh.cshrc                             |
| csh.login                             |
| csh.logout                            |
| cups                                  |
| defaults                              |
| dnsextd.conf                          |
| efax.rc                               |
| emond.d                               |
| find.codes                            |
| fstab.hd                              |
| ftpd.conf                             |
| ftpd.conf.default                     |
| ftpusers                              |
| gettytab                              |
| group                                 |
| group~previous                        |
| hosts                                 |
| hosts.equiv                           |
| hosts~orig                            |
| irbrc                                 |
| kern_loader.conf                      |
| krb5.keytab                           |
| localtime                             |
| locate.rc                             |
| mach_init.d                           |
| mach_init_per_login_session.d         |
| mach_init_per_user.d                  |
| mail.rc                               |
| man.conf                              |
| manpaths                              |
| manpaths.d                            |
| master.passwd                         |
| master.passwd~orig                    |
| nanorc                                |
| networks                              |
| newsyslog.conf                        |
| newsyslog.d                           |
| nfs.conf                              |
| notify.conf                           |
| ntp-restrict.conf                     |
| ntp.conf                              |
| ntp_opendirectory.conf                |
| odbc.ini                              |
| odbcinst.ini                          |
| openldap                              |
| pam.d                                 |
| passwd                                |
| passwd~orig                           |
| paths                                 |
| paths.d                               |
| periodic                              |
| pf.anchors                            |
| pf.conf                               |
| pf.os                                 |
| php-fpm.conf.default                  |
| php.ini.default                       |
| php.ini.default-5.2-previous          |
| postfix                               |
| ppp                                   |
| profile                               |
| protocols                             |
| racoon                                |
| rc.common                             |
| rc.common~previous                    |
| rc.netboot                            |
| resolv.conf                           |
| rmtab                                 |
| rpc                                   |
| rtadvd.conf                           |
| security                              |
| services                              |
| shells                                |
| snmp                                  |
| ssh                                   |
| sudo_lecture                          |
| sudoers                               |
| sudoers~orig                          |
| syslog.conf                           |
| syslog.conf~previous                  |
| ttys                                  |
| xtab                                  |
| zprofile                              |
| zshrc                                 |


*** Use Tramp to execute remotely

#+BEGIN_SRC sh
  hostname -f
#+END_SRC

#+RESULTS:
: Dont.attlocal.net

#+BEGIN_SRC sh :dir /howardabrams.com:
  hostname -f
#+END_SRC

** Setting Parameter Locations

**** Inline with header block

**** Defaults for blocks in section

**** Defaults for blocks in entire document

**** Defaults for every document

#+BEGIN_SRC emacs-lisp
org-babel-default-header-args
org-babel-default-header-args:<lang>
#+END_SRC

** Too Many Parameters?

#+BEGIN_SRC sh :dir /ect :var USER="howard"
  grep $USER passwd
#+END_SRC


#+HEADER: :dir /etc
#+BEGIN_SRC sh :var USER="howard"
  grep $USER passwd
#+END_SRC

#+HEADER: :dir /etc
#+HEADER :var USER="howard"
#+BEGIN_SRC sh
  grep $USER passwd
#+END_SRC

** Section Default Parameters

Parameters which should be the same for all source blocks in a section can be placed in a property drawer

** Header
  :PROPERTIES:
  :header-args:ruby: :dir /etc
  :header-args:sh: :dir /
  :END:

#+BEGIN_SRC ruby
  File.absolute_path(".")
#+END_SRC

#+RESULTS:
: /private/etc

#+BEGIN_SRC sh
  ls -d $(pwd)
#+END_SRC

#+RESULTS:
: /


 - *Note:* Some parameters can only be set using =header-args=

** Default Parameters for a Document

To set a parameter for all blocks in a document, use =#+PROPERTY:=

#+PROPERTY: dir ~/work

Notice these parameters do not have initial colons

BUT: Language specific parameters do!

#+PROPERTY: header-args:sh :tangle no

*Note:* The properties are not registered until you hit =C-c C-c= on them.

** Header Parameter Types

  - Evaluation Parameters :: Affect how a block is executed
  - Export Parameters :: Affect how a block or the results from execution is shown when it is exported to HTML
  - Literate Programming Parameters :: Connection blocks together to change the source code
  - Variable Parameters :: Variables for a source block
  - Miscellaneous Input/Output :: A collection of parameters that don't fit anywhere else

** Evaluation Parameters

  - results of the expression
  - outputted results

#+BEGIN_SRC ruby
  puts 'Hello World'
  5 * 6
#+END_SRC

#+RESULTS:
: 30

Results output only the last evaluated statement

To change the :results header argument to be output will give everything that was printed:

#+BEGIN_SRC ruby :results output
  puts 'Hello World'
  5*6
#+END_SRCs

#+RESULTS:
: Hello World

*Note:* Default for =sh= is =output=

** Output Formatting

  - table :: Row for single array, full table for array of arrays
  - list :: Regular orgmode list exported as an unordered list
  - verbatim :: Raw output
  - file :: Write the results to a file
  - html :: Assumes the output is HTML code, so that is what is exported
  - code :: Assumes output is source code in the same language
  - silent :: Only shown in the mini-buffer

** Lists

*** List all files in the directory

#+BEGIN_SRC ruby :results list
  Dir.entries('.').sort.select do |file|
     file[0] != '.'
  end
#+END_SRC

#+RESULTS:
- #examples.org#
- README.org
- examples.org
- literateprogramming.org

** Raw Output

#+BEGIN_SRC sh :results verbatim :exports both
  ssh -v goblin.howardabrams.com ls mossandcrow
#+END_SRC

#+RESULTS:


** Writing Results to a File

#+BEGIN_SRC ruby :results output :file primes.txt
  require 'prime'
  Prime.each(5000) do |prime|
    p prime
  end
#+END_SRC

#+RESULTS:
[[file:primes.txt]]


**** Excessively Handy!!

** Tangling

the =:tangle= parameter takes all blocks of the same language and writes the to the file specified.

#+BEGIN_SRC ruby :tangle double-space.rb
  while s = gets
    print s ; puts
  end
#+END_SRC

#+RESULTS:
: nil
